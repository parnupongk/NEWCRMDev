//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NEWCRM.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class NEWCRMEntities : DbContext
    {
        public NEWCRMEntities()
            : base("name=NEWCRMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Activities> Activities { get; set; }
        public DbSet<ActivityStatus> ActivityStatus1 { get; set; }
        public DbSet<ActivityStatus_Locale> ActivityStatus_Locale { get; set; }
        public DbSet<Address> Address { get; set; }
        public DbSet<Announcement> Announcements { get; set; }
        public DbSet<AuthenLog> AuthenLogs { get; set; }
        public DbSet<Calendar> Calendars { get; set; }
        public DbSet<Callback> Callbacks { get; set; }
        public DbSet<CallbackCause> CallbackCauses { get; set; }
        public DbSet<CallbackCause_Locale> CallbackCause_Locale { get; set; }
        public DbSet<CallBackChannel> CallBackChannels { get; set; }
        public DbSet<CallbackType> CallbackTypes { get; set; }
        public DbSet<CallbackType_Locale> CallbackType_Locale { get; set; }
        public DbSet<CaseAttachFile> CaseAttachFiles { get; set; }
        public DbSet<CaseLog> CaseLogs { get; set; }
        public DbSet<CaseLogType> CaseLogTypes { get; set; }
        public DbSet<CaseRemindFlow> CaseRemindFlows { get; set; }
        public DbSet<Case> Cases { get; set; }
        public DbSet<CaseStatu> CaseStatus { get; set; }
        public DbSet<CaseStatus_Locale> CaseStatus_Locale { get; set; }
        public DbSet<CaseType> CaseTypes { get; set; }
        public DbSet<Channel> Channels { get; set; }
        public DbSet<ContactLog> ContactLogs { get; set; }
        public DbSet<Contact> Contacts { get; set; }
        public DbSet<ContactType> ContactTypes { get; set; }
        public DbSet<ContactType_Locale> ContactType_Locale { get; set; }
        public DbSet<ContactViewLog> ContactViewLogs { get; set; }
        public DbSet<District> Districts { get; set; }
        public DbSet<District_Locale> District_Locale { get; set; }
        public DbSet<Function> Functions { get; set; }
        public DbSet<Gender> Genders { get; set; }
        public DbSet<Genders_Locale> Genders_Locale { get; set; }
        public DbSet<Group_Role> Group_Role { get; set; }
        public DbSet<Group> Groups { get; set; }
        public DbSet<Locale> Locales { get; set; }
        public DbSet<MailLog> MailLogs { get; set; }
        public DbSet<Notification> Notifications { get; set; }
        public DbSet<NotificationType> NotificationTypes { get; set; }
        public DbSet<Phone> Phones { get; set; }
        public DbSet<PhoneType> PhoneTypes { get; set; }
        public DbSet<PhoneType_Locale> PhoneType_Locale { get; set; }
        public DbSet<Priority> Priorities { get; set; }
        public DbSet<Priority_Locale> Priority_Locale { get; set; }
        public DbSet<Province> Provinces { get; set; }
        public DbSet<Province_Locale> Province_Locale { get; set; }
        public DbSet<Province_Zone> Province_Zone { get; set; }
        public DbSet<Role_Functions> Role_Functions { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<SubDistrict> SubDistricts { get; set; }
        public DbSet<SubDistrict_Locale> SubDistrict_Locale { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<Title> Titles { get; set; }
        public DbSet<Titles_Locale> Titles_Locale { get; set; }
        public DbSet<User_Group> User_Group { get; set; }
        public DbSet<User_Role> User_Role { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<DNIS> DNIS { get; set; }
        public DbSet<TaskScheduleLog> TaskScheduleLogs { get; set; }
    
        public virtual ObjectResult<sp_ActivityChannelSummary_Result> sp_ActivityChannelSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ActivityChannelSummary_Result>("sp_ActivityChannelSummary");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_ContactAutoComplete_Result> sp_ContactAutoComplete(string p_Search, Nullable<int> p_Row)
        {
            var p_SearchParameter = p_Search != null ?
                new ObjectParameter("p_Search", p_Search) :
                new ObjectParameter("p_Search", typeof(string));
    
            var p_RowParameter = p_Row.HasValue ?
                new ObjectParameter("p_Row", p_Row) :
                new ObjectParameter("p_Row", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ContactAutoComplete_Result>("sp_ContactAutoComplete", p_SearchParameter, p_RowParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_Get_Casepending_Result> sp_Get_Casepending(string p_Now)
        {
            var p_NowParameter = p_Now != null ?
                new ObjectParameter("p_Now", p_Now) :
                new ObjectParameter("p_Now", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Casepending_Result>("sp_Get_Casepending", p_NowParameter);
        }
    
        public virtual ObjectResult<sp_Get_Casepending_ByAgent_Result> sp_Get_Casepending_ByAgent(Nullable<int> uSERID, string cREATEDATE)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var cREATEDATEParameter = cREATEDATE != null ?
                new ObjectParameter("CREATEDATE", cREATEDATE) :
                new ObjectParameter("CREATEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Casepending_ByAgent_Result>("sp_Get_Casepending_ByAgent", uSERIDParameter, cREATEDATEParameter);
        }
    
        public virtual int sp_GetAssetBySerialNo(string p_sn)
        {
            var p_snParameter = p_sn != null ?
                new ObjectParameter("p_sn", p_sn) :
                new ObjectParameter("p_sn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetAssetBySerialNo", p_snParameter);
        }
    
        public virtual ObjectResult<sp_GetCaseDetailById_Result> sp_GetCaseDetailById(Nullable<decimal> cASEID, string lANG)
        {
            var cASEIDParameter = cASEID.HasValue ?
                new ObjectParameter("CASEID", cASEID) :
                new ObjectParameter("CASEID", typeof(decimal));
    
            var lANGParameter = lANG != null ?
                new ObjectParameter("LANG", lANG) :
                new ObjectParameter("LANG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCaseDetailById_Result>("sp_GetCaseDetailById", cASEIDParameter, lANGParameter);
        }
    
        public virtual ObjectResult<sp_GetCaseDetailTimeline_Result> sp_GetCaseDetailTimeline(Nullable<int> casID)
        {
            var casIDParameter = casID.HasValue ?
                new ObjectParameter("casID", casID) :
                new ObjectParameter("casID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCaseDetailTimeline_Result>("sp_GetCaseDetailTimeline", casIDParameter);
        }
    
        public virtual ObjectResult<sp_GetCaseFavourite_Result> sp_GetCaseFavourite(Nullable<int> usrID)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCaseFavourite_Result>("sp_GetCaseFavourite", usrIDParameter);
        }
    
        public virtual int sp_GetCaseFollowUp(Nullable<int> p_ctaID)
        {
            var p_ctaIDParameter = p_ctaID.HasValue ?
                new ObjectParameter("p_ctaID", p_ctaID) :
                new ObjectParameter("p_ctaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetCaseFollowUp", p_ctaIDParameter);
        }
    
        public virtual ObjectResult<sp_GetCaseList_Result> sp_GetCaseList(string caseId, string startCreateOn, string endCreateOn, string startModified, string endModified, string startClosed, string endClosed, string open, string closed, string cancel, string pending, Nullable<decimal> oBJID, Nullable<int> uSERID, Nullable<int> gROUPID, Nullable<int> gROUPUSERID, string channel)
        {
            var caseIdParameter = caseId != null ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(string));
    
            var startCreateOnParameter = startCreateOn != null ?
                new ObjectParameter("StartCreateOn", startCreateOn) :
                new ObjectParameter("StartCreateOn", typeof(string));
    
            var endCreateOnParameter = endCreateOn != null ?
                new ObjectParameter("EndCreateOn", endCreateOn) :
                new ObjectParameter("EndCreateOn", typeof(string));
    
            var startModifiedParameter = startModified != null ?
                new ObjectParameter("StartModified", startModified) :
                new ObjectParameter("StartModified", typeof(string));
    
            var endModifiedParameter = endModified != null ?
                new ObjectParameter("EndModified", endModified) :
                new ObjectParameter("EndModified", typeof(string));
    
            var startClosedParameter = startClosed != null ?
                new ObjectParameter("StartClosed", startClosed) :
                new ObjectParameter("StartClosed", typeof(string));
    
            var endClosedParameter = endClosed != null ?
                new ObjectParameter("EndClosed", endClosed) :
                new ObjectParameter("EndClosed", typeof(string));
    
            var openParameter = open != null ?
                new ObjectParameter("Open", open) :
                new ObjectParameter("Open", typeof(string));
    
            var closedParameter = closed != null ?
                new ObjectParameter("Closed", closed) :
                new ObjectParameter("Closed", typeof(string));
    
            var cancelParameter = cancel != null ?
                new ObjectParameter("Cancel", cancel) :
                new ObjectParameter("Cancel", typeof(string));
    
            var pendingParameter = pending != null ?
                new ObjectParameter("Pending", pending) :
                new ObjectParameter("Pending", typeof(string));
    
            var oBJIDParameter = oBJID.HasValue ?
                new ObjectParameter("OBJID", oBJID) :
                new ObjectParameter("OBJID", typeof(decimal));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var gROUPIDParameter = gROUPID.HasValue ?
                new ObjectParameter("GROUPID", gROUPID) :
                new ObjectParameter("GROUPID", typeof(int));
    
            var gROUPUSERIDParameter = gROUPUSERID.HasValue ?
                new ObjectParameter("GROUPUSERID", gROUPUSERID) :
                new ObjectParameter("GROUPUSERID", typeof(int));
    
            var channelParameter = channel != null ?
                new ObjectParameter("Channel", channel) :
                new ObjectParameter("Channel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCaseList_Result>("sp_GetCaseList", caseIdParameter, startCreateOnParameter, endCreateOnParameter, startModifiedParameter, endModifiedParameter, startClosedParameter, endClosedParameter, openParameter, closedParameter, cancelParameter, pendingParameter, oBJIDParameter, uSERIDParameter, gROUPIDParameter, gROUPUSERIDParameter, channelParameter);
        }
    
        public virtual ObjectResult<sp_getCaseQuery_Result> sp_getCaseQuery(string p_query)
        {
            var p_queryParameter = p_query != null ?
                new ObjectParameter("p_query", p_query) :
                new ObjectParameter("p_query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCaseQuery_Result>("sp_getCaseQuery", p_queryParameter);
        }
    
        public virtual ObjectResult<sp_getCasesOverSLA_Result> sp_getCasesOverSLA(string p_Now)
        {
            var p_NowParameter = p_Now != null ?
                new ObjectParameter("p_Now", p_Now) :
                new ObjectParameter("p_Now", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCasesOverSLA_Result>("sp_getCasesOverSLA", p_NowParameter);
        }
    
        public virtual ObjectResult<sp_getContactCommonDetail_Result> sp_getContactCommonDetail(Nullable<int> p_ctaId)
        {
            var p_ctaIdParameter = p_ctaId.HasValue ?
                new ObjectParameter("p_ctaId", p_ctaId) :
                new ObjectParameter("p_ctaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getContactCommonDetail_Result>("sp_getContactCommonDetail", p_ctaIdParameter);
        }
    
        public virtual ObjectResult<sp_getContactLogTimeline_Result> sp_getContactLogTimeline(Nullable<int> p_ctaID)
        {
            var p_ctaIDParameter = p_ctaID.HasValue ?
                new ObjectParameter("p_ctaID", p_ctaID) :
                new ObjectParameter("p_ctaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getContactLogTimeline_Result>("sp_getContactLogTimeline", p_ctaIDParameter);
        }
    
        public virtual ObjectResult<sp_getContactSearch_Result> sp_getContactSearch(string p_Name, Nullable<int> p_Cate, string p_Order, Nullable<int> p_Top, Nullable<int> p_Created)
        {
            var p_NameParameter = p_Name != null ?
                new ObjectParameter("p_Name", p_Name) :
                new ObjectParameter("p_Name", typeof(string));
    
            var p_CateParameter = p_Cate.HasValue ?
                new ObjectParameter("p_Cate", p_Cate) :
                new ObjectParameter("p_Cate", typeof(int));
    
            var p_OrderParameter = p_Order != null ?
                new ObjectParameter("p_Order", p_Order) :
                new ObjectParameter("p_Order", typeof(string));
    
            var p_TopParameter = p_Top.HasValue ?
                new ObjectParameter("p_Top", p_Top) :
                new ObjectParameter("p_Top", typeof(int));
    
            var p_CreatedParameter = p_Created.HasValue ?
                new ObjectParameter("p_Created", p_Created) :
                new ObjectParameter("p_Created", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getContactSearch_Result>("sp_getContactSearch", p_NameParameter, p_CateParameter, p_OrderParameter, p_TopParameter, p_CreatedParameter);
        }
    
        public virtual ObjectResult<sp_GetContactViewLog_Result> sp_GetContactViewLog(Nullable<int> p_UsrID)
        {
            var p_UsrIDParameter = p_UsrID.HasValue ?
                new ObjectParameter("p_UsrID", p_UsrID) :
                new ObjectParameter("p_UsrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetContactViewLog_Result>("sp_GetContactViewLog", p_UsrIDParameter);
        }
    
        public virtual ObjectResult<sp_GetGroupUser_Result> sp_GetGroupUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetGroupUser_Result>("sp_GetGroupUser");
        }
    
        public virtual ObjectResult<sp_GetInboundContact_Result> sp_GetInboundContact(string p_Phone, string p_Name)
        {
            var p_PhoneParameter = p_Phone != null ?
                new ObjectParameter("p_Phone", p_Phone) :
                new ObjectParameter("p_Phone", typeof(string));
    
            var p_NameParameter = p_Name != null ?
                new ObjectParameter("p_Name", p_Name) :
                new ObjectParameter("p_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetInboundContact_Result>("sp_GetInboundContact", p_PhoneParameter, p_NameParameter);
        }
    
        public virtual ObjectResult<sp_getLastActivityContact_Result> sp_getLastActivityContact(Nullable<int> p_usrID)
        {
            var p_usrIDParameter = p_usrID.HasValue ?
                new ObjectParameter("p_usrID", p_usrID) :
                new ObjectParameter("p_usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getLastActivityContact_Result>("sp_getLastActivityContact", p_usrIDParameter);
        }
    
        public virtual ObjectResult<sp_GetLastCases_Result> sp_GetLastCases(Nullable<int> p_ctaID, Nullable<int> p_top)
        {
            var p_ctaIDParameter = p_ctaID.HasValue ?
                new ObjectParameter("p_ctaID", p_ctaID) :
                new ObjectParameter("p_ctaID", typeof(int));
    
            var p_topParameter = p_top.HasValue ?
                new ObjectParameter("p_top", p_top) :
                new ObjectParameter("p_top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetLastCases_Result>("sp_GetLastCases", p_ctaIDParameter, p_topParameter);
        }
    
        public virtual ObjectResult<sp_GetMailContentInfo_Result> sp_GetMailContentInfo(Nullable<int> cASEID)
        {
            var cASEIDParameter = cASEID.HasValue ?
                new ObjectParameter("CASEID", cASEID) :
                new ObjectParameter("CASEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMailContentInfo_Result>("sp_GetMailContentInfo", cASEIDParameter);
        }
    
        public virtual int sp_getMailRemind(string p_Date)
        {
            var p_DateParameter = p_Date != null ?
                new ObjectParameter("p_Date", p_Date) :
                new ObjectParameter("p_Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getMailRemind", p_DateParameter);
        }
    
        public virtual ObjectResult<sp_getNewCaseList_Result> sp_getNewCaseList(Nullable<int> p_actID)
        {
            var p_actIDParameter = p_actID.HasValue ?
                new ObjectParameter("p_actID", p_actID) :
                new ObjectParameter("p_actID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getNewCaseList_Result>("sp_getNewCaseList", p_actIDParameter);
        }
    
        public virtual ObjectResult<sp_GetNotification_Result> sp_GetNotification(Nullable<int> usrID)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetNotification_Result>("sp_GetNotification", usrIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetNotification_Total(Nullable<int> usrID)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetNotification_Total", usrIDParameter);
        }
    
        public virtual ObjectResult<sp_GetStatus_Result> sp_GetStatus(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStatus_Result>("sp_GetStatus", langParameter);
        }
    
        public virtual ObjectResult<sp_GetUser_Result> sp_GetUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUser_Result>("sp_GetUser");
        }
    
        public virtual ObjectResult<sp_getUserProfile_Result> sp_getUserProfile(Nullable<int> p_usrID)
        {
            var p_usrIDParameter = p_usrID.HasValue ?
                new ObjectParameter("p_usrID", p_usrID) :
                new ObjectParameter("p_usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getUserProfile_Result>("sp_getUserProfile", p_usrIDParameter);
        }
    
        public virtual ObjectResult<sp_getUserProfileTimeline_Result> sp_getUserProfileTimeline(Nullable<int> p_UsrID)
        {
            var p_UsrIDParameter = p_UsrID.HasValue ?
                new ObjectParameter("p_UsrID", p_UsrID) :
                new ObjectParameter("p_UsrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getUserProfileTimeline_Result>("sp_getUserProfileTimeline", p_UsrIDParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int st_CategorySearch(Nullable<System.Guid> catId, Nullable<System.Guid> catParentId, Nullable<System.Guid> artId)
        {
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(System.Guid));
    
            var catParentIdParameter = catParentId.HasValue ?
                new ObjectParameter("CatParentId", catParentId) :
                new ObjectParameter("CatParentId", typeof(System.Guid));
    
            var artIdParameter = artId.HasValue ?
                new ObjectParameter("ArtId", artId) :
                new ObjectParameter("ArtId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("st_CategorySearch", catIdParameter, catParentIdParameter, artIdParameter);
        }
    
        public virtual int ST_CATEGORYSEARCH_ROOT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_CATEGORYSEARCH_ROOT");
        }
    
        public virtual ObjectResult<st_Get_Dashbord_CaseStatus_Result> st_Get_Dashbord_CaseStatus(string cREATEDATE)
        {
            var cREATEDATEParameter = cREATEDATE != null ?
                new ObjectParameter("CREATEDATE", cREATEDATE) :
                new ObjectParameter("CREATEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_Get_Dashbord_CaseStatus_Result>("st_Get_Dashbord_CaseStatus", cREATEDATEParameter);
        }
    
        public virtual ObjectResult<st_GET_UserRole_ById_Result> st_GET_UserRole_ById(Nullable<int> uSERID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_GET_UserRole_ById_Result>("st_GET_UserRole_ById", uSERIDParameter);
        }
    
        public virtual ObjectResult<st_GetUserInGroup_ById_Result> st_GetUserInGroup_ById(Nullable<int> uSERID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_GetUserInGroup_ById_Result>("st_GetUserInGroup_ById", uSERIDParameter);
        }
    
        public virtual ObjectResult<uspCaseType_Result> uspCaseType(Nullable<int> catLevel)
        {
            var catLevelParameter = catLevel.HasValue ?
                new ObjectParameter("catLevel", catLevel) :
                new ObjectParameter("catLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspCaseType_Result>("uspCaseType", catLevelParameter);
        }
    
        public virtual ObjectResult<uspContactDetail_Result> uspContactDetail(string sTARTDATE, string eNDDATE)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspContactDetail_Result>("uspContactDetail", sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual int uspGetAgentName(Nullable<long> aGENTID)
        {
            var aGENTIDParameter = aGENTID.HasValue ?
                new ObjectParameter("AGENTID", aGENTID) :
                new ObjectParameter("AGENTID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetAgentName", aGENTIDParameter);
        }
    
        public virtual ObjectResult<uspReportCaseSummary_Result> uspReportCaseSummary(string sTARTDATE, string eNDDATE)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportCaseSummary_Result>("uspReportCaseSummary", sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspSuvitech_CaseStatusByDay(string dDATE, Nullable<int> cASESTATUSID)
        {
            var dDATEParameter = dDATE != null ?
                new ObjectParameter("DDATE", dDATE) :
                new ObjectParameter("DDATE", typeof(string));
    
            var cASESTATUSIDParameter = cASESTATUSID.HasValue ?
                new ObjectParameter("CASESTATUSID", cASESTATUSID) :
                new ObjectParameter("CASESTATUSID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspSuvitech_CaseStatusByDay", dDATEParameter, cASESTATUSIDParameter);
        }
    
        public virtual ObjectResult<uspSuvitech_CaseStatusSumAll_Result> uspSuvitech_CaseStatusSumAll(string sTARTDATE, string eNDDATE)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSuvitech_CaseStatusSumAll_Result>("uspSuvitech_CaseStatusSumAll", sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual ObjectResult<uspSuvitech_ContactDetailRpt_Result> uspSuvitech_ContactDetailRpt(string sTARTDATE, string eNDDATE)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSuvitech_ContactDetailRpt_Result>("uspSuvitech_ContactDetailRpt", sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual ObjectResult<sp_getTotalTodolistByChannel_Result> sp_getTotalTodolistByChannel(Nullable<int> usrID)
        {
            var usrIDParameter = usrID.HasValue ?
                new ObjectParameter("usrID", usrID) :
                new ObjectParameter("usrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getTotalTodolistByChannel_Result>("sp_getTotalTodolistByChannel", usrIDParameter);
        }
    
        public virtual ObjectResult<SP_Contact_Detail_RP_Result> SP_Contact_Detail_RP(string sTARTDATE, string eNDDATE)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Contact_Detail_RP_Result>("SP_Contact_Detail_RP", sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual ObjectResult<string> sp_GetGroupCaseOnlineAcc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetGroupCaseOnlineAcc");
        }
    
        public virtual ObjectResult<uspReportCaseLevel_Result> uspReportCaseLevel(string sTARTDATE, string eNDDATE)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportCaseLevel_Result>("uspReportCaseLevel", sTARTDATEParameter, eNDDATEParameter);
        }
    }
}
